def input_error(func):
    def wrapper(*args, **kwargs):
        try:
            return func(*args, **kwargs)
        except KeyError:
            return "Enter user name"
        except ValueError:
            return "Give me name and phone please"
        except IndexError:
            return "Contact not found"
    return wrapper


class AssistantBot:
    def __init__(self):
        self.contacts = {}

    @input_error
    def add_contact(self, name, phone):
        self.contacts[name] = phone
        return f"Contact {name} added successfully"

    @input_error
    def change_contact(self, name, phone):
        if name in self.contacts:
            self.contacts[name] = phone
            return f"Phone number for {name} updated successfully"
        else:
            raise IndexError

    @input_error
    def show_phone(self, name):
        if name in self.contacts:
            return f"Phone number for {name}: {self.contacts[name]}"
        else:
            raise IndexError

    @input_error
    def show_all_contacts(self):
        if self.contacts:
            return "\n".join([f"{name}: {phone}" for name, phone in self.contacts.items()])
        else:
            return "No contacts found"

    def handle_command(self, command):
        command_parts = command.split()
        if command_parts[0] == "hello":
            return "How can I help you?"
        elif command_parts[0] == "add":
            return self.add_contact(command_parts[1], command_parts[2])
        elif command_parts[0] == "change":
            return self.change_contact(command_parts[1], command_parts[2])
        elif command_parts[0] == "phone":
            return self.show_phone(command_parts[1])
        elif command_parts[0] == "show" and command_parts[1] == "all":
            return self.show_all_contacts()
        elif command_parts[0] in ["good", "bye", "close", "exit"]:
            return "Good bye!"
        else:
            return "Invalid command"

    def main(self):
        print("Welcome to Assistant Bot!")
        while True:
            command = input("Enter command: ")
            if command.lower() in ["good bye", "close", "exit"]:
                print("Good bye!")
                break
            else:
                result = self.handle_command(command)
                print(result)


if __name__ == "__main__":
    bot = AssistantBot()
    bot.main()
